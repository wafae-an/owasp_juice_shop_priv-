name: "SCA using Snyk"
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: write
  security-events: write
jobs:
  security_testing:
    name: Security Testing
    runs-on: ubuntu-latest
    steps:
      # clonage de repo
      - name: Checkout Repository
        uses: actions/checkout@v4
      
      # Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      
      # installation des dependances
      - name: Install Dependencies
        run: npm install
      
      # installation de Snyk CLI
      - name: Install Snyk CLI
        run: npm install -g snyk
      
      # v√©rification de l'authentification Snyk
      - name: Verify Snyk Authentication
        run: |
          echo "üîê V√©rification de l'authentification Snyk..."
          snyk auth ${{ secrets.SNYK_TOKEN }}
          snyk config get api
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      # execution de Snyk avec logs d√©taill√©s
      - name: Run Snyk to check for vulnerabilities
        continue-on-error: true
        run: |
          echo "üîç D√©marrage du scan Snyk..."
          snyk test --json --json-file-output=snyk-results.json 2>&1 | tee snyk-output.log
          EXIT_CODE=$?
          echo "üìä Code de sortie Snyk: $EXIT_CODE"
          
          if [ $EXIT_CODE -eq 0 ]; then
            echo "‚úÖ Aucune vuln√©rabilit√© trouv√©e"
          elif [ $EXIT_CODE -eq 1 ]; then
            echo "‚ö†Ô∏è Vuln√©rabilit√©s d√©tect√©es (comportement normal pour Juice Shop)"
          else
            echo "‚ùå Erreur lors de l'ex√©cution de Snyk"
          fi
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      
      # affichage des logs pour debugging
      - name: Display Snyk Output
        if: always()
        run: |
          echo "üìã Contenu du log Snyk:"
          if [ -f snyk-output.log ]; then
            cat snyk-output.log
          else
            echo "‚ùå Fichier de log introuvable"
          fi
      
      # v√©rification de l'existence du fichier
      - name: Check if results file exists
        if: always()
        run: |
          if [ -f snyk-results.json ]; then
            echo "‚úÖ Fichier snyk-results.json trouv√©"
            FILE_SIZE=$(wc -c < snyk-results.json)
            echo "üìè Taille du fichier: $FILE_SIZE octets"
            
            if [ $FILE_SIZE -gt 100 ]; then
              echo "üìÑ Aper√ßu du contenu (100 premiers caract√®res):"
              head -c 100 snyk-results.json
              echo ""
            else
              echo "üìÑ Contenu complet:"
              cat snyk-results.json
            fi
          else
            echo "‚ùå Fichier snyk-results.json introuvable"
            echo "Cr√©ation d'un fichier de rapport d'erreur"
            echo '{"vulnerabilities": [], "error": "Snyk test failed - check logs above"}' > snyk-results.json
          fi
      
      # sauvegarde des logs et r√©sultats
      - name: Upload Scan Results and Logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: snyk-vulnerability-report
          path: |
            snyk-results.json
            snyk-output.log
