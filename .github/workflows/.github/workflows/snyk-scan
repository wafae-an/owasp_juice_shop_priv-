name: SCA - Software Composition Analysis (Snyk)

on:
  push:
    branches: [ "main", "master", "develop" ]
  pull_request:
    branches: [ "main", "master" ]
  schedule:
    - cron: '0 3 * * *'  # Ex√©cution quotidienne √† 3h du matin
  workflow_dispatch:

jobs:
  snyk-scan:
    name: Analyse des D√©pendances avec Snyk
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
    
    steps:
      - name: Checkout du code
        uses: actions/checkout@v4

      - name: Installation de Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Installation des d√©pendances
        run: npm install

      - name: Installation de Snyk CLI
        run: |
          npm install -g snyk
          snyk --version

      - name: Authentification Snyk
        run: snyk auth ${{ secrets.SNYK_TOKEN }}
        continue-on-error: false

      - name: Test des vuln√©rabilit√©s avec Snyk
        id: snyk-test
        run: |
          snyk test --json --severity-threshold=low > snyk-results.json || true
        continue-on-error: true

      - name: G√©n√©ration du rapport JSON d√©taill√©
        run: |
          mkdir -p reports
          snyk test --json --all-projects > reports/snyk-vulnerability-report.json || true
          
          # G√©n√©ration d'un rapport HTML (si disponible)
          snyk test --json > reports/snyk-test-results.json || true

      - name: Monitoring Snyk (optionnel)
        run: |
          snyk monitor --all-projects || true
        continue-on-error: true

      - name: Sauvegarde du rapport JSON
        uses: actions/upload-artifact@v4
        with:
          name: snyk-vulnerability-report
          path: reports/*.json
          retention-days: 90

      - name: Sauvegarde des r√©sultats bruts
        uses: actions/upload-artifact@v4
        with:
          name: snyk-raw-results
          path: snyk-results.json
          retention-days: 30
        if: always()

      - name: Analyse des r√©sultats
        run: |
          if [ -f "snyk-results.json" ]; then
            echo "## üîç R√©sum√© de l'Analyse Snyk SCA" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            # Extraction des statistiques
            critical=$(jq '[.vulnerabilities[] | select(.severity=="critical")] | length' snyk-results.json 2>/dev/null || echo "0")
            high=$(jq '[.vulnerabilities[] | select(.severity=="high")] | length' snyk-results.json 2>/dev/null || echo "0")
            medium=$(jq '[.vulnerabilities[] | select(.severity=="medium")] | length' snyk-results.json 2>/dev/null || echo "0")
            low=$(jq '[.vulnerabilities[] | select(.severity=="low")] | length' snyk-results.json 2>/dev/null || echo "0")
            
            echo "### üìä Vuln√©rabilit√©s D√©tect√©es :" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "| S√©v√©rit√© | Nombre |" >> $GITHUB_STEP_SUMMARY
            echo "|----------|--------|" >> $GITHUB_STEP_SUMMARY
            echo "| üî¥ Critical | $critical |" >> $GITHUB_STEP_SUMMARY
            echo "| üü† High | $high |" >> $GITHUB_STEP_SUMMARY
            echo "| üü° Medium | $medium |" >> $GITHUB_STEP_SUMMARY
            echo "| üü¢ Low | $low |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            
            total=$((critical + high + medium + low))
            echo "**Total : $total vuln√©rabilit√©(s)**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "üîó [T√©l√©charger le rapport complet](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}#artifacts)" >> $GITHUB_STEP_SUMMARY
          else
            echo "‚ö†Ô∏è Aucun fichier de r√©sultats trouv√©" >> $GITHUB_STEP_SUMMARY
          fi

      - name: V√©rification des vuln√©rabilit√©s critiques
        run: |
          if [ -f "snyk-results.json" ]; then
            critical=$(jq '[.vulnerabilities[] | select(.severity=="critical")] | length' snyk-results.json 2>/dev/null || echo "0")
            if [ "$critical" -gt "0" ]; then
              echo "‚ùå ATTENTION : $critical vuln√©rabilit√©(s) critique(s) d√©tect√©e(s) !"
              exit 1
            fi
          fi
        continue-on-error: true
